//деление пополам
#include <iostream>
#include <math.h>

using namespace std;
int main()
{
	cout << "Enter the sides of interpreter\n";
	long double a, b, e, num=0;
	cin >> a >> b>>e;
	long double fa = 2 * a + cos(a) - 0.5;
	long double fb = 2 * b + cos(b) - 0.5;
	if (fb*fa<0)
	while ((b-a)/2 > e)
	{
		double sr = (b + a) / 2;
		long double fss = 2 * sr + cos(sr) - 0.5;
		if (fa * fss > 0)
			a = sr;
		if (fb * fss > 0)
			b = sr;
			num++;

	}
	else {
		cout << "Error";
	}	cout << a << "\nKol-vo iter " << num<<endl;

}

//метод ньютона
#include <iostream>
#include <math.h>

using namespace std;
int main()
{
	float Fx, fx, x, y, e, num = 0;
	x = 1;
	cin>>e;
	do {
		fx = x * 2 + cos(x) - 0.5;
		Fx = 2 - sin(x);
		y = x;
		x = x - fx / Fx;
		num++;
	} while (abs(x - y) > e);
	cout << x<<"\nKol-vo iter " << num;
}

//метод хорд
#include <iostream>
#include <cmath>
#include <locale.h>
using namespace std;
int main()
{
	double x;
	int sch = 0;
	int rer;
	cout << "Enter the sides of interpreter";double x2, e;
	cin >> x >> x2;
	
	cout << "Enter the tochnost'";
	cin >> e;
	double fx = x * 2 + cos(x) - 0.5;
	double fx2 = x2 * 2 + cos(x2) - 0.5;
	double per = x;
	double per2 = x2;
	double i = x - ((x - x2) * fx / (fx - fx2));

		if (per * i < 0)
		{
			do {
			per = x;
			sch++;
			fx = x * 2 + cos(x) - 0.5;
			x = x - ((x - x2) * fx / (fx - fx2));
			rer = 1;

			} while (abs(x - per) > e);
		}

		else
		{
			do {per2 = x2;
			sch++;
			fx2 = x2 * 2 + cos(x2) - 0.5;
			x2 = x2 - ((x2 - x) * fx2 / (fx2 - fx));
			rer = 0;
			} while (abs(x2 - per2));
			
		}

	if (rer==1) cout << "Ur num is " << x << "\n Kol-vo oper is " << sch;
	else cout << "Ur num is " << x2 << "\n Kol-vo oper is " << sch;
}
//метод простых итераций
#include <iostream>
using namespace std;
int main()
{double e;
cin>>e;
	double x = -1;
	double fx = x * 2 + cos(x) - 0.5;
	double sch, oper=0;
	do {
		sch = x;
		x = x - fx / 3;
		oper++;
		fx = x * 2 + cos(x) - 0.5;
	} while (abs(x - sch)/2 > e);
	cout << x<<"\nKol-vo operations "<<oper;

}
//ЛАБА2
//метод простых иетраций системы ур-ий, эпс = 0.001, прибл = 1, итераций 20;
#include <cmath>
#include <iomanip>
#include <iostream>
using namespace std;

double f(double x)
{
	return acos(1.5-x);
}

double g(double x)
{
	return (1+sin(x-0.5))/2;
}

int main()
{
	double x;
	double eps;
	cout << "Enter initial root value   : "; cin >> x;
	cout << "Enter eps : "; cin >> eps;
	for (double iter = 1; eps < fabs(f(x)); iter = iter + 1)
	{
		system("cls");
		cout << "Iteration : " << setprecision(0) << iter << endl;
		cout << "x    = " << x << endl;
		cout << "g(x) = " << g(x) << endl;
		cout << "f(x) = " << f(x) << endl;
		x = g(x);
	}
	return 0;
}
//метод ньютона, приближение = 1, эпс = 0.001, итераций 20;
#include <cmath>
#include <iomanip>
#include <iostream>
using namespace std;

double f(double x)
{
	return acos(1.5 - x);
}
double df(double x)
{
	return 1 / (sqrt(1 - (1.5 - x) * (1.5 - x)));
}

double g(double x)
{
	return (1 + sin(x - 0.5)) / 2;
}


int main()
{
	double x;
	double eps;
	cout << "Enter initial root value   : "; cin >> x;
	cout << "Enter error of calculation : "; cin >> eps;
	for (double iter = 1; eps < fabs(f(x)); iter = iter + 1)
	{
		system("cls");
		cout << "Iteration : " << setprecision(0) << iter << endl;
		if (df(x) == 0)
			break;//если df(x) == 0, то будет деление на ноль x - f(x)/df(x)
		cout << "x    = " << x << endl;
		cout << "g(x) = " << g(x) << endl;
		cout << "df(x)= " << df(x) << endl;
		cout << "f(x) = " << f(x) << endl;
		x = g(x);
	}
	system("pause");
	return 0;
}
//метод прогонки , ввод коэффициентов в=-3, с=5, д=0, а1 = 0, ввод кол-ва эл-тов = 4!;
#include <cmath>
#include <iomanip>
#include <iostream>
using namespace std;
double func(double d, double a, double V, double U, double b)
{
	return (d - a * V) / (a * U + b);
}
int main()
{
	double x[30];
	double U[30];
	double V[30];
	double b[30];
	double a[30];
	double c[30];
	double d[30];
	cout << "\t enter the size of matrix "; int n; cin >> n;
	cout << "\t enter the koeff b = ";
	cin >> b[1];
	cout << "\t enter the koeff c = "; cin >> c[1];
	cout << "\t enter the koeff d = "; cin >> d[1];
	U[1] = -c[1] / b[1];
	V[1] = d[1] / b[1];
	for (int i = 2; i <= n; i++)
	{
		U[i] = -c[i] / (a[i] * U[i - 1] + b[i]);
		V[i] = (d[i] - a[i] * V[i - 1]) / (a[i] * U[i - 1] + b[i]);
	}for (int j = 2; j <= n; j++)
	a[j] = j + 4;
	for (int j = 1;j<=n;j++)
		b[j] = pow(-1, j + 4);
	for (int j = 1;j<=n-1;j++)
		c[j] = pow(-j + 4, j + 4);
	for (int j = 1; j <= n; j++)
		d[j] = 4 - j;
	int i = 1;
	for (n = n; n > 1; n--)
	{
		cout << " Iteration is " << i << ", x[" << n << "] = " << func(d[n], a[n], V[n - 1], U[n - 1], b[n]) << "\n"; i++;
	}
}

